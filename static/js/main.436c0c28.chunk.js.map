{"version":3,"sources":["index.js"],"names":["Box","selectBox","_this","props","row","col","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","this","boxClass","id","onClick","Component","Grid","width","cols","rowsArr","i","rows","j","boxId","gridFull","push","key","style","Buttons","handleSelect","evt","_this2","gridSize","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","playButton","pauseButton","clear","slow","fast","seed","react_bootstrap__WEBPACK_IMPORTED_MODULE_9__","title","onSelect","react_bootstrap__WEBPACK_IMPORTED_MODULE_10__","eventKey","Main","_this3","Object","F_UI_game_of_life_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","F_UI_game_of_life_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","F_UI_game_of_life_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","gridCopy","arrayClone","state","setState","Math","floor","random","clearInterval","intervalId","setInterval","play","speed","grid","Array","fill","map","generation","size","g","g2","count","componentDidMount","href","target","arr","JSON","parse","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.436c0c28.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { ButtonToolbar, MenuItem, DropdownButton } from \"react-bootstrap\";\n\nclass Box extends Component {\n  selectBox = () => {\n    this.props.selectBox(this.props.row, this.props.col);\n  };\n\n  render() {\n    return (\n      <div\n        className={this.props.boxClass}\n        id={this.props.id}\n        onClick={this.selectBox}\n      />\n    );\n  }\n}\n\nclass Grid extends Component {\n  render() {\n    const width = this.props.cols * 14;\n    const rowsArr = [];\n\n    let boxClass = \"\";\n    for (let i = 0; i < this.props.rows; i++) {\n      for (let j = 0; j < this.props.cols; j++) {\n        let boxId = i + \"_\" + j;\n\n        boxClass = this.props.gridFull[i][j] ? \"box on\" : \"box off\";\n        rowsArr.push(\n          <Box\n            boxClass={boxClass}\n            key={boxId}\n            boxId={boxId}\n            row={i}\n            col={j}\n            selectBox={this.props.selectBox}\n          />\n        );\n      }\n    }\n\n    return (\n      <div className=\"grid\" style={{ width: width }}>\n        {rowsArr}\n      </div>\n    );\n  }\n}\n\nclass Buttons extends Component {\n  handleSelect = evt => {\n    this.props.gridSize(evt);\n  };\n\n  render() {\n    return (\n      <div className=\"center\">\n        <ButtonToolbar>\n          <button className=\"btn btn-default\" onClick={this.props.playButton}>\n            Play\n          </button>\n          <button className=\"btn btn-default\" onClick={this.props.pauseButton}>\n            Pause\n          </button>\n          <button className=\"btn btn-default\" onClick={this.props.clear}>\n            Clear\n          </button>\n          <button className=\"btn btn-default\" onClick={this.props.slow}>\n            Slow\n          </button>\n          <button className=\"btn btn-default\" onClick={this.props.fast}>\n            Fast\n          </button>\n          <button className=\"btn btn-default\" onClick={this.props.seed}>\n            Seed\n          </button>\n          <DropdownButton\n            title=\"Grid Size\"\n            id=\"size-menu\"\n            onSelect={this.handleSelect}\n          >\n            <MenuItem eventKey=\"1\">20x10</MenuItem>\n            <MenuItem eventKey=\"2\">50x30</MenuItem>\n            <MenuItem eventKey=\"3\">70x50</MenuItem>\n          </DropdownButton>\n        </ButtonToolbar>\n      </div>\n    );\n  }\n}\n\nclass Main extends Component {\n  constructor() {\n    super();\n    this.speed = 100;\n    this.rows = 30;\n    this.cols = 50;\n\n    this.state = {\n      generation: 0,\n      gridFull: Array(this.rows)\n        .fill()\n        .map(() => Array(this.cols).fill(false))\n    };\n  }\n\n  selectBox = (row, col) => {\n    let gridCopy = arrayClone(this.state.gridFull);\n    gridCopy[row][col] = !gridCopy[row][col];\n    this.setState({\n      gridFull: gridCopy\n    });\n  };\n\n  seed = () => {\n    let gridCopy = arrayClone(this.state.gridFull);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.cols; j++) {\n        if (Math.floor(Math.random() * 4) === 1) {\n          gridCopy[i][j] = true;\n        }\n      }\n    }\n    this.setState({\n      gridFull: gridCopy\n    });\n  };\n\n  playButton = () => {\n    clearInterval(this.intervalId);\n    this.intervalId = setInterval(this.play, this.speed);\n  };\n\n  pauseButton = () => {\n    clearInterval(this.intervalId);\n  };\n\n  fast = () => {\n    this.speed = 100;\n    this.playButton();\n  };\n\n  slow = () => {\n    this.speed = 1000;\n    this.playButton();\n  };\n\n  clear = () => {\n    let grid = Array(this.rows)\n      .fill()\n      .map(() => Array(this.cols).fill(false));\n    this.setState({\n      gridFull: grid,\n      generation: 0\n    });\n  };\n\n  gridSize = size => {\n    switch (size) {\n      case \"1\":\n        this.cols = 20;\n        this.rows = 10;\n        break;\n      case \"2\":\n        this.cols = 50;\n        this.rows = 30;\n        break;\n      default:\n        this.cols = 70;\n        this.rows = 50;\n    }\n    this.clear();\n  };\n\n  play = () => {\n    let g = this.state.gridFull;\n    let g2 = arrayClone(this.state.gridFull);\n\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.cols; j++) {\n        let count = 0;\n        if (i > 0) if (g[i - 1][j]) count++;\n        if (i > 0 && j > 0) if (g[i - 1][j - 1]) count++;\n        if (i > 0 && j < this.cols - 1) if (g[i - 1][j + 1]) count++;\n        if (j < this.cols - 1) if (g[i][j + 1]) count++;\n        if (j > 0) if (g[i][j - 1]) count++;\n        if (i < this.rows - 1) if (g[i + 1][j]) count++;\n        if (i < this.rows - 1 && j > 0) if (g[i + 1][j - 1]) count++;\n        if (i < this.rows - 1 && this.cols - 1) if (g[i + 1][j + 1]) count++;\n        if (g[i][j] && (count < 2 || count > 3)) g2[i][j] = false;\n        if (!g[i][j] && count === 3) g2[i][j] = true;\n      }\n    }\n    this.setState({\n      gridFull: g2,\n      generation: this.state.generation + 1\n    });\n  };\n\n  componentDidMount = () => {\n    this.seed();\n    this.playButton();\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>The Game Of Life</h1>\n        <Buttons\n          playButton={this.playButton}\n          pauseButton={this.pauseButton}\n          slow={this.slow}\n          fast={this.fast}\n          clear={this.clear}\n          seed={this.seed}\n          gridSize={this.gridSize}\n        />\n        <Grid\n          gridFull={this.state.gridFull}\n          rows={this.rows}\n          cols={this.cols}\n          selectBox={this.selectBox}\n        />\n        <h2>Generations: {this.state.generation}</h2>\n        <p>\n          <a\n            href=\"https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life\"\n            target=\"_blank\"\n            className=\"btn btn-primary\"\n          >\n            What is Game Of Life?\n          </a>\n        </p>\n      </div>\n    );\n  }\n}\n\nfunction arrayClone(arr) {\n  return JSON.parse(JSON.stringify(arr));\n}\n\nReactDOM.render(<Main />, document.getElementById(\"root\"));\n"],"sourceRoot":""}